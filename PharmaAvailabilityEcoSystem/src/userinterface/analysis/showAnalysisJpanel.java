/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.analysis;

import business.drug.Drug;
import business.inventory.Inventory;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Paint;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author jaysh
 */
public class showAnalysisJpanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderjpanel
     */
    private JPanel userProcessContainer;
    private Inventory inventory;

    public showAnalysisJpanel(JPanel userProcessContainer, Inventory inventory) {
        initComponents();
        this.setSize(1200, 750);
        this.userProcessContainer = userProcessContainer;
        this.inventory = inventory;
        showInventoryGraph();
    }

    public void showInventoryGraph() {
        DefaultCategoryDataset datasetInventory = new DefaultCategoryDataset();
        DefaultCategoryDataset datasetInventory1 = new DefaultCategoryDataset();
        for (Drug drug : inventory.getDrugStock()) {

            if(drug.getQuantity() < 10){
                datasetInventory1.setValue(drug.getQuantity(), "",drug.getName());           
            }
            else{
            datasetInventory.setValue(drug.getQuantity(), "", drug.getName());

        }
        JFreeChart chart = ChartFactory.createBarChart("Inventory Stock", "Drugs", "quantity", datasetInventory);
        JFreeChart chart1 = ChartFactory.createBarChart("Inventory Stock Less Than 10", "Drugs", "quantity", datasetInventory1);
        CategoryPlot catPlot = chart.getCategoryPlot();
        CategoryPlot catPlot1 = chart1.getCategoryPlot();
        catPlot.setBackgroundPaint(Color.BLACK);
        Color color = new Color(0,255,0);
        
        
        
             class CustomRenderer1 extends BarRenderer3D {
    private Paint[] colors;
    public CustomRenderer1(final Paint[] colors) {
        this.colors = colors;
    }

    public Paint getItemPaint(final int row, final int column) {
        
            return Color.RED;
    }
    
}  
        
        
        class CustomRenderer extends BarRenderer3D {

    private Paint[] colors;
    public CustomRenderer(final Paint[] colors) {
        this.colors = colors;
    }
      public Paint getItemPaint(final int row, final int column) {
        
            return Color.GREEN;
    }

  
    
}
   
        
        CategoryItemRenderer barColor = new CustomRenderer(new Paint[]{});
        CategoryItemRenderer barColor1 = new CustomRenderer1(new Paint[]{});
        
    catPlot.setRenderer(barColor);
    catPlot1.setRenderer(barColor1);
    
    
 


      

    //    CategoryPlot catPlot1 = chart1.getCategoryPlot();
        catPlot1.setBackgroundPaint(Color.BLACK);
        catPlot1.getRenderer().setSeriesPaint(0, new Color(255, 0, 0));

        ChartPanel chartPanel = new ChartPanel(chart);
        chartJpanel.removeAll();
        chartJpanel.add(chartPanel, BorderLayout.CENTER);
        chartJpanel.validate();
        ChartPanel chartPanel1 = new ChartPanel(chart1);
        chartJpanel1.removeAll();
        chartJpanel1.add(chartPanel1, BorderLayout.CENTER);
        chartJpanel1.validate();

    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        title = new javax.swing.JLabel();
        chartJpanel1 = new javax.swing.JPanel();
        chartJpanel = new javax.swing.JPanel();
        backJButton1 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1200, 750));

        kGradientPanel1.setkEndColor(new java.awt.Color(102, 204, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(183, 248, 230));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(1200, 750));
        kGradientPanel1.setLayout(null);

        title.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        title.setText("Inventory Analysis");
        title.setAlignmentX(740.0F);
        title.setAlignmentY(245.0F);
        kGradientPanel1.add(title);
        title.setBounds(310, 40, 540, 48);

        chartJpanel1.setBackground(new java.awt.Color(0, 204, 255));
        chartJpanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chartJpanel1.setPreferredSize(new java.awt.Dimension(1000, 600));
        chartJpanel1.setLayout(new java.awt.BorderLayout());
        kGradientPanel1.add(chartJpanel1);
        chartJpanel1.setBounds(670, 160, 370, 362);

        chartJpanel.setBackground(new java.awt.Color(0, 204, 255));
        chartJpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chartJpanel.setPreferredSize(new java.awt.Dimension(1000, 600));
        chartJpanel.setLayout(new java.awt.BorderLayout());
        kGradientPanel1.add(chartJpanel);
        chartJpanel.setBounds(20, 160, 610, 360);

        backJButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        backJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/arrow-back-icon_1_40x40.png"))); // NOI18N
        backJButton1.setContentAreaFilled(false);
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backJButton1);
        backJButton1.setBounds(20, 40, 50, 40);

        backJButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        backJButton.setContentAreaFilled(false);
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backJButton);
        backJButton.setBounds(20, 40, 50, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton backJButton1;
    private javax.swing.JPanel chartJpanel;
    private javax.swing.JPanel chartJpanel1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
