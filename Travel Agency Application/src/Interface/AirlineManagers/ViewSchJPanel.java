/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AirlineManagers;

import Business.FlytSchedule;
import Business.FlytScheduleDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author JAINHEMANT
 */
public class ViewSchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewSchJPanel
     */
    private JPanel rightPanel;
    private FlytSchedule fsch;  
    private FlytScheduleDirectory fschDir;
    public ViewSchJPanel(JPanel rightPanel, FlytSchedule fsch,FlytScheduleDirectory fschDir) {
        initComponents();
        
        this.rightPanel = rightPanel ;
        this.fsch = fsch ; 
        this.fschDir = fschDir ;
        saveBtn.setEnabled(false);
        
        
        flytNumjTextField.setEditable(false);
        flytAirNamejTextField.setEditable(false);
        flytFromjTextField.setEditable(false);
        flytTojTextField.setEditable(false);
        flytSeatsjTextField.setEditable(false);
        flytFlyingDatejTextField.setEditable(false);
        flytFleetModeljTextField.setEditable(false);
        flytFlyingTimejTextField.setEditable(false);
        
        flytAirNamejTextField.setEditable(false);
        flytFleetModeljTextField.setEditable(false);
        flytSeatsjTextField.setEditable(false);
        flytNumjTextField.setText(fsch.getFlytNum());
        flytAirNamejTextField.setText(fsch.getFlytAirline());
        flytFleetModeljTextField.setText(fsch.getFlytFleet());
        flytFromjTextField.setText(fsch.getFlytFrom());
        flytTojTextField.setText(fsch.getFlytTo());
        flytFlyingDatejTextField.setText(fsch.getFlytDate());
        flytFlyingTimejTextField.setText(fsch.getFlytTime());
        flytSeatsjTextField.setText(String.valueOf(fsch.getFlytAvlSeats()));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     private boolean getDateRegex(String date)
   {
       
       //String regex= "\\d{2}\\-\\d{2}\\-\\d{4}";
       String dRegex="^(0[0-9]|1[0-2])\\-(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\-(199[0-9]|20[0-1][0-8])";
       final Pattern pattern = Pattern.compile(dRegex);
       boolean bool=pattern.matcher(date).matches();
       return bool;
   }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flytTojTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        flytFlyingDatejTextField = new javax.swing.JTextField();
        flytNumjTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        flytAirNamejTextField = new javax.swing.JTextField();
        flytSeatsjTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        flytFleetModeljTextField = new javax.swing.JTextField();
        updBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        flytFlyingTimejTextField = new javax.swing.JTextField();
        flytFromjTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Flight Schedule");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Flying Date :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Flight No. :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Seats :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Airliner :");

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Fleet :");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        updBtn.setText("Update");
        updBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Departure Loc :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Flying Time :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Arrival Loc :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(updBtn)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(flytAirNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytNumjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytFleetModeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytFromjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytTojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytFlyingDatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytSeatsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flytFlyingTimejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveBtn)
                        .addGap(155, 155, 155))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(flytNumjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flytAirNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(flytFleetModeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(flytFromjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(flytTojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flytFlyingDatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flytFlyingTimejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(flytSeatsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(updBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
        Component[] components = rightPanel.getComponents();
        for(Component c : components){
            if(c instanceof FlytSchJPanel){
                FlytSchJPanel panel = (FlytSchJPanel)c;
                panel.populate();
            }
        }
    }//GEN-LAST:event_backBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        flytNumjTextField.setEditable(false);
        flytAirNamejTextField.setEditable(false);
        flytFromjTextField.setEditable(false);
        flytTojTextField.setEditable(false);
        flytSeatsjTextField.setEditable(false);
        flytFlyingDatejTextField.setEditable(false);
        flytFleetModeljTextField.setEditable(false);
        flytFlyingTimejTextField.setEditable(false);
        updBtn.setEnabled(true);
        
         if(flytNumjTextField.getText()==null || flytNumjTextField.getText().equals(""))
        {
            flytNumjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Number cannot be empty!");
            return;
        }
        
        if(flytAirNamejTextField.getText()==null || flytAirNamejTextField.getText().equals(""))
        {
            flytAirNamejTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel3.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Air Name cannot be empty!");
            return;
        }
        
         if(flytFromjTextField.getText()==null || flytFromjTextField.getText().equals(""))
        {
            flytFromjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight From cannot be empty!");
            return;
        }
         
          if(flytTojTextField.getText()==null || flytTojTextField.getText().equals(""))
        {
            flytTojTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight To cannot be empty!");
            return;
        }
          
          if(flytSeatsjTextField.getText()==null || flytSeatsjTextField.getText().equals(""))
        {
            flytSeatsjTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel6.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Seats cannot be empty!");
            return;
        }
          if(flytFlyingDatejTextField.getText()==null || flytFlyingDatejTextField.getText().equals(""))
        {
            flytFlyingDatejTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Flying Date cannot be empty!");
            return;
        }
         if(flytFlyingTimejTextField.getText()==null || flytFlyingTimejTextField.getText().equals(""))
        {
            flytFlyingTimejTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel8.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Flying Time cannot be empty!");
            return;
        }
         if(flytFleetModeljTextField.getText()==null || flytFleetModeljTextField.getText().equals(""))
        {
            flytFleetModeljTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel9.setForeground(Color.red);
            JOptionPane.showMessageDialog(null,"Flight Fleet Model cannot be empty!");
            return;
        }

        if(!getDateRegex(flytFlyingDatejTextField.getText()))
               {
                 
                   JOptionPane.showMessageDialog(null,"Please Enter date in format MM-dd-YYYY","ERROR",0);
                   return;
               }
        fsch.setFlytNum(flytNumjTextField.getText());
        fsch.setFlytAirline(flytAirNamejTextField.getText());
        fsch.setFlytFleet(flytFleetModeljTextField.getText());
        fsch.setFlytFrom(flytFromjTextField.getText());
        fsch.setFlytTo(flytTojTextField.getText());
        fsch.setFlytDate(flytFlyingDatejTextField.getText());
        fsch.setFlytTime(flytFlyingTimejTextField.getText());
        try
        {
            fsch.setFlytAvlSeats(Integer.parseInt(flytSeatsjTextField.getText()));
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(null, "Seats should be in integer");
            return;
        }
        saveBtn.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Schedule Updated Successfully");
         rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
        Component[] components = rightPanel.getComponents();
        for(Component c : components){
            if(c instanceof FlytSchJPanel){
                FlytSchJPanel panel = (FlytSchJPanel)c;
                panel.populate();
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void updBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updBtnActionPerformed
        // TODO add your handling code here:
        flytNumjTextField.setEditable(true);

        flytFromjTextField.setEditable(true);
        flytTojTextField.setEditable(true);

        flytFlyingDatejTextField.setEditable(true);

        flytFlyingTimejTextField.setEditable(true);
        updBtn.setEnabled(false);
        saveBtn.setEnabled(true);
    }//GEN-LAST:event_updBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField flytAirNamejTextField;
    private javax.swing.JTextField flytFleetModeljTextField;
    private javax.swing.JTextField flytFlyingDatejTextField;
    private javax.swing.JTextField flytFlyingTimejTextField;
    private javax.swing.JTextField flytFromjTextField;
    private javax.swing.JTextField flytNumjTextField;
    private javax.swing.JTextField flytSeatsjTextField;
    private javax.swing.JTextField flytTojTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton updBtn;
    // End of variables declaration//GEN-END:variables
}
